#!/bin/sh
#
if [ "$1" = "Filesystem" ]; then
	# Filesystem Treiber ext3 ext4 ...
	echo "Lade Filesystem Treiber fat vfat  ..."
	modprobe fat.ko
	modprobe fscache.ko
	modprobe isofs.ko
	modprobe msdos.ko
	modprobe ntfs.ko
	modprobe udf.ko
	modprobe vfat.ko
	modprobe cifs.ko
	modprobe cachefiles.ko
	modprobe jbd.ko
	modprobe nls_ascii.ko
	modprobe nls_cp1250.ko
	modprobe nls_cp1251.ko
	modprobe nls_cp437.ko
	modprobe nls_cp850.ko
	modprobe nls_cp855.ko
	modprobe nls_cp866.ko
	modprobe nls_iso8859-1.ko
	modprobe nls_iso8859-2.ko
	modprobe nls_iso8859-5.ko
	modprobe nls_koi8-r.ko
	modprobe nls_koi8-ru.ko
	modprobe nls_koi8-u.ko
	modprobe nls_utf8.ko
	echo "Fertig"
elif [ "$1" = "jffs2" ]; then
	echo "Nand mount Check"
	nandcheck=`cat /var/config/nanduse`
	if [ "$nandcheck" = "jffs2-nand-e2" ]; then
		echo "Nand Speicher mounten für E2..."
		mount -t jffs2 /dev/mtdblock1 /media/nand
	else
		echo "Nand ist nicht Formatiert ..."
	fi 
elif [ "$1" = "detect" ]; then
	modprobe detect.ko
elif [ "$1" = "Automount" ]; then
    # start automounter with umount timeout of 5 seconds
    modprobe autofs4.ko
    /usr/sbin/automount --timeout=5 /autofs file /etc/auto.hotplug
    /usr/sbin/automount --timeout=5 /media/net file /etc/auto.network
elif [ "$1" = "Embx" ]; then
       echo "init embx"
       modprobe embxshell.ko
       modprobe embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:137:set2 ;
       modprobe embxshm.ko mailbox0=shm:0:7:0x60000000:0:512:512:0:1024:0xa4000000:0x10000000 ;
       modprobe mme_host.ko transport0=shm
elif [ "$1" = "Bootlog" ]; then
       /var/config/bootlog.sh &
elif [ "$1" = "Overclock" ]; then
    modprobe cpu_frequ.ko
    if [ -e /var/keys/Benutzerdaten/.system/overclock ]; then
       OVERCLOCK=`cat /var/keys/Benutzerdaten/.system/overclock`
       if [ "$OVERCLOCK" = "300on" ]; then
    		echo "overclock Aktiviert"
    		echo 25609 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "333on" ]; then
    		echo "overclock Aktiviert"
    		echo 9475 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "366on" ]; then
    		echo "overclock Aktiviert"
    		echo 31241 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "400on" ]; then
    		echo "overclock Aktiviert"
    		echo 22790 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "300daueron" ]; then
    		echo "overclock Aktiviert"
   		echo 25609 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "333daueron" ]; then
    		echo "overclock Aktiviert"
   		echo 9475 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "366daueron" ]; then
    		echo "overclock Aktiviert"
   		echo 31241 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "400daueron" ]; then
    		echo "overclock Aktiviert"
   		echo 22790 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "daueroff" ]; then
    		echo "overclock Deaktiviert"
       elif [ "$OVERCLOCK" = "overoff" ]; then
    		echo "overclock Deaktiviert"
       else
		echo "Overclock OFF"
       fi
    else
	echo "Overclock OFF -- Default"
    fi
elif [ "$1" = "Mac" ]; then
    MAC=`cat /var/keys/Benutzerdaten/.system/mac`
    if [ "$MAC" = "1" ]; then
	echo "use default MAC Adresse"
    elif [ "$MAC" = "2" ]; then
	ifconfig eth0 hw ether 00:81:E1:12:06:30
    elif [ "$MAC" = "3" ]; then
	ifconfig eth0 hw ether 00:82:E1:12:06:30
    elif [ "$MAC" = "4" ]; then
	ifconfig eth0 hw ether 00:83:E1:12:06:30
    elif [ "$MAC" = "5" ]; then
	ifconfig eth0 hw ether 00:84:E1:12:06:30
    fi
elif [ "$1" = "E2_proc" ]; then
	modprobe e2_proc.ko
elif [ "$1" = "Virtfs" ]; then
    /etc/init.d/mountvirtfs start
    /etc/init.d/portmap start

    echo "Starting DEBUG Interface"
    /etc/init.d/mountall start
elif [ "$1" = "Telnet" ]; then
       /etc/init.d/hostname start

       echo "starting telnetd"
       /usr/sbin/telnetd -l /bin/login
elif [ "$1" = "Stmfb-firmware" ]; then
       echo "init stmfb"
       modprobe stmcore-display-stx7109c3.ko
	
	# Stellt den Boot Prozess je nach dem was Aktiviert wurde auf Scart oder HDMI um
       MODE=`cat /etc/enigma2/settings | grep Scart`
       if [ "$MODE" = "config.av.videoport=Scart" ]; then
		echo "Scart Ausgang Aktviert"
       		modprobe stmfb.ko display0=720x576-32@60:12m:pal:yuv:yuv;
       else
		echo "HDMI Ausgang Aktviert"
       		modprobe stmfb.ko display0=1280x720-32@60:12m:pal:yuv:yuv
       fi

       echo "LOADING MODULES"

       if [ ! -e /boot/audio.elf ]; then
          echo "FW MISSING!!!"
       fi

       echo "load a firmware"
       /bin/ustslave /dev/st231-1 /boot/audio.elf
       echo "load v firmware"
       /bin/ustslave /dev/st231-0 /boot/video.elf
elif [ "$1" = "Avs" ]; then
       BOXTYPE=`cat /proc/Boxtype`
       echo "init AVS"
       if [ $BOXTYPE = Vip2 ]; then
	    modprobe avs.ko type=vip2_avs
	    dual=yes
       elif [ $BOXTYPE = Vip1 ]; then
	    echo "AVS Aktiviert -- VIP1"
	    modprobe avs.ko type=stv6418
        elif [ $BOXTYPE = Vip1v2 ]; then
             echo "AVS Aktiviert -- VIP1v2"
             modprobe avs.ko type=vip1_avs
        fi
elif [ "$1" = "Player2-stuff" ]; then
       player=`cat /proc/stb/player/version`
       player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
       echo "init player $player"

       modprobe mmelog.ko
       modprobe mpeg2hw.ko mmeName=MPEG2_TRANSFORMER1
       modprobe ksound.ko
       modprobe kreplay.ko
       modprobe silencegen.ko
       modprobe pcm_transcoder.ko
       modprobe p2div64.ko
       modprobe stm_v4l2.ko
       if [ $player -gt 131 ]; then
       modprobe stmvout.ko
       modprobe stmvbi.ko
       fi
       modprobe pseudocard.ko bpa2_partition=LMI_VID
elif [ "$1" = "Tuner" ]; then
       BOXTYPE=`cat /proc/Boxtype`
       echo "init frontends"
       ### Laed den Gesetzten Tuner Treiber
       if [ $BOXTYPE = Vip1 ]; then
		TUNERTYPE=`cat /proc/Tunertype`		
            	if [ $TUNERTYPE = "stb6100" ]; then
            		modprobe fe-core.ko demod=stb0899 tuner=stb6100 ;
            	elif [ $TUNERTYPE = "stb6110x" ]; then
            		modprobe fe-core.ko demod=stv090x tuner=stb6110x ;
            	elif [ $TUNERTYPE = "lg031" ]; then
            		modprobe fe-core.ko demod=tda10023 tuner=lg031 ;
            	elif [ $TUNERTYPE = "sharp6465" ]; then
            		modprobe fe-core.ko demod=ce6353 tuner=sharp6465 ;
		fi
       elif [ $BOXTYPE = "Vip1v2" ]; then
		TUNERTYPE=`cat /proc/Tunertype`		
            	if [ $TUNERTYPE = "sharp7306" ]; then
            		modprobe fe-core-vip1v2.ko demod=stv090x tuner=sharp7306 ;
            	elif [ $TUNERTYPE = "lg031" ]; then
            		modprobe fe-core-vip1v2.ko demod=tda10023 tuner=lg031 ;
            	elif [ $TUNERTYPE = "sharp6465" ]; then
            		modprobe fe-core-vip1v2.ko demod=ce6353 tuner=sharp6465 ;
		fi
       elif [ $BOXTYPE = Vip2 ]; then
		TUNERTYPE=`cat /proc/Tunertype`		
            	if [ $TUNERTYPE = "sharp7306" ]; then
            		DEMOD1="stv090x"
			TUNER1="sharp7306"
            	elif [ $TUNERTYPE = "lg031" ]; then
            		DEMOD1="tda10023"
			TUNER1="lg031"
            	elif [ $TUNERTYPE = "sharp6465" ]; then
            		DEMOD1="ce6353"
			TUNER1="sharp6465"
		fi
		TUNERTYPE2=`cat /proc/Tunertype2`		
            	if [ $TUNERTYPE2 = "sharp7306" ]; then
            		DEMOD2="stv090x"
			TUNER2="sharp7306"
            	elif [ $TUNERTYPE2 = "lg031" ]; then
            		DEMOD2="tda10023"
			TUNER2="lg031"
            	elif [ $TUNERTYPE2 = "sharp6465" ]; then
            		DEMOD2="ce6353"
			TUNER2="sharp6465"
		fi
	    	modprobe fe-core-vip2.ko demod1=$DEMOD1 tuner1=$TUNER1 demod2=$DEMOD2 tuner2=$TUNER2 ;
       fi
elif [ "$1" = "Cimax" ]; then
       echo "init drivers"
       # Cimax Modul für Vip2 ohne CI Module laden
       BOXTYPE=`cat /proc/Boxtype`
       if [ $BOXTYPE = vip2 ]; then
	       echo "Load Vip2 no CI Modul Treiber"
	       modprobe cimax_vip2.ko
       else
	       echo "Load CI Modul Treiber"
               modprobe cimax.ko
       fi
elif [ "$1" = "Tuner-stuff" ]; then
       echo "np-PTI Laden..."
       modprobe pti.ko videoMem=2048 waitMS=20
       echo "NP- Fertig"
       player=`cat /proc/stb/player/version`
       player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
       if [ $player -gt 131 ]; then
       modprobe stm_monitor.ko
       modprobe stmsysfs.ko
           modprobe stmdvb.ko
       else
       modprobe stmdvb.ko
       modprobe stm_monitor.ko
       fi   
elif [ "$1" = "Player2" ]; then
     echo "player2"
       modprobe player2.ko discardlateframe=0 noaudiosync=0 useoldaudiofw=1
     echo "player fertig"
       modprobe sth264pp.ko
       modprobe stmalloc.ko
       modprobe platform.ko
elif [ "$1" = "Swap" ]; then
    if [ -e /var/config/SWAP ]; then
    SWAPFILE=`cat /var/config/SWAP`
       if [ "$SWAPFILE" = "ramzswap" ]; then
             modprobe lzo1x_compress.ko
             modprobe lzo1x_decompress.ko
             echo "RamZswap Laden ..."
             modprobe ramzswap.ko disksize_kb=30123
       elif [ "$SWAPFILE" = "swapfile" ]; then
          echo "Lade SwapFile"
       elif [ "$SWAPFILE" = "swapdev" ]; then
          echo "Lade Swap /dev"
       fi
    else
       echo "Lade Swap /dev"
    fi
elif [ "$1" = "Smartcard" ]; then
    if [ ! -e /dev/sci0 ]; then 
	mknod /dev/sci0 c 169 0
 	mknod /dev/sci1 c 169 1
    fi
    BOXTYPE=`cat /proc/Boxtype`
    echo "Kartenslots Aktivieren ..."
    if [ "$BOXTYPE" = "Vip1" ]; then
	modprobe smartcard boxtype=vip1
    elif [ "$BOXTYPE" = "Vip1v2" ]; then
	modprobe smartcard boxtype=vip1
    else
    	modprobe smartcard boxtype=vip2
    fi
elif [ "$1" = "Cec" ]; then
    modprobe cec.ko activemode=1
elif [ "$1" = "Bpamem" ]; then
     modprobe bpamem.ko
elif [ "$1" = "Tun" ]; then
    if [ -e /var/keys/Benutzerdaten/.system/openvpn ]; then
      ##### OpenVPN benoetigtes TUN dev #####
       if [ ! -e /dev/net/tun ]; then
          echo "erstelle tun /dev fuer OpenVPN"
          mkdir -p /dev/net
          mknod /dev/net/tun c 10 200
          chmod 600 /dev/net/tun
          echo "FERTIG"
       else
          echo "TUN /dev vorhanden ... FERTIG"
       fi
          echo "Lade tun.ko fuer OpenVPN ..."
          modprobe tun.ko
    else
       echo "Device /dev/net/tun nicht erstellt und tun.ko Modul nicht geladen... OpenVPN deaktiviert"
    fi
elif [ "$1" = "Wlan" ]; then
    ### Aktiviert euren W-Lan treiber
    if [ -e /var/keys/Benutzerdaten/.system/wlan ]; then
       WLAN=`cat /var/keys/Benutzerdaten/.system/wlan`
	modprobe cfg80211.ko
	modprobe mac80211.ko
       if [ "$WLAN" = "1" ]; then
          echo "W-Lan Modul -- 8192cu geladen ..."
          modprobe 8192cu.ko
       elif [ "$WLAN" = "2" ]; then
          echo "W-Lan Modul -- 8712u geladen ..."
          modprobe 8712u.ko
       elif [ "$WLAN" = "3" ]; then
          echo "W-Lan Modul -- rt2870sta geladen ..."
          modprobe rt2870sta.ko
       elif [ "$WLAN" = "4" ]; then
          echo "W-Lan Modul -- rt3070sta geladen ..."
          modprobe rt3070sta.ko
       elif [ "$WLAN" = "5" ]; then
          echo "W-Lan Modul -- rt5370sta geladen ..."
          modprobe rt5370sta.ko
       elif [ "$WLAN" = "6" ]; then
          echo "W-Lan Modul -- rt73usb geladen ..."
          modprobe rt2x00lib.ko
          modprobe rt2x00usb.ko
          modprobe rt73usb.ko
       elif [ "$WLAN" = "7" ]; then
          echo "W-Lan Modul -- zydas geladen ..."
          modprobe zd1211rw.ko
       elif [ "$WLAN" = "8" ]; then
          echo "W-Lan Modul -- 8188eu geladen ..."
          modprobe 8188eu.ko
       elif [ "$WLAN" = "9" ]; then
          echo "W-Lan Modul -- 8812au geladen ..."
          modprobe 8812au.ko
       fi
    fi
elif [ "$1" = "UsbToSerial" ]; then
    ### Aktiviert euren W-Lan treiber
    if [ -e /var/keys/Benutzerdaten/.system/serial ]; then
       SERIAL=`cat /var/keys/Benutzerdaten/.system/serial`
       if [ "$SERIAL" = "0" ]; then
		echo "USB Serial nicht geladen"
       else
	if [ ! -e /dev/ttyUSB0 ]; then
	   echo "Make Serial to USB device"
	   mknod /dev/ttyUSB0 c 188 0 
	   mknod /dev/ttyUSB1 c 188 1 
	   mknod /dev/ttyUSB2 c 188 2
	   echo "3 Devs erstellt..."
	fi
	modprobe usbserial.ko
       if [ "$SERIAL" = "1" ]; then
          echo "USBtoSERIAL FTDI Modul geladen ..."
          modprobe ftdi_sio.ko
       elif [ "$SERIAL" = "2" ]; then
          echo "USBtoSERIAL PL2303 Modul geladen ..."
          modprobe pl2303.ko
       elif [ "$SERIAL" = "3" ]; then
          echo "USBtoSERIAL PL2303 und FTDI Modul geladen ..."
          modprobe ftdi_sio.ko
          modprobe pl2303.ko
       fi
      fi
    fi
elif [ "$1" = "Lirc" ]; then
    modprobe simu_button.ko
    if [ -e /var/keys/Benutzerdaten/.system/fernbedienung ]; then
    ### Laed eure Fernbedienung
       echo "init lircd"
    if [ -e /var/etc/firstboot ]; then
       echo "FB Switch Startet first..."
       echo "Lade Lirc STM-Default Treiber ..."
       modprobe lirc_stm.ko	
    else
    	if [ -e /var/config/system/remote ]; then
		    REMOTE=`cat /var/config/system/remote`
		    if [ "$REMOTE" = "techno" ]; then
			echo "Lade TechnoTrend USB Treiber ..."
       			modprobe lirc_ttusbir.ko
		    elif [ "$REMOTE" = "mce2005" ]; then
			echo "Lade MCE2005 USB Treiber ..."
			modprobe lirc_mceusb2.ko
		    else
			echo "Lade Lirc STM-Default Treiber ..."
			modprobe lirc_stm.ko
		    fi
	else
		echo "Lade Lirc STM-Default Treiber ..."
		modprobe lirc_stm.ko				
	fi
       /usr/bin/lircd -P /ram/lircd.pid -o /ram/lircd
    fi
    fi
    ### Laed eure Fernbedienung
    if [ -e /var/etc/firstboot ]; then
    echo "FB Switch Startet first..."
    else
    if [ -e /var/keys/Benutzerdaten/.system/fernbedienung ]; then
    fb=`cat /var/keys/Benutzerdaten/.system/fernbedienung`
    DEEPSTANDBY=`cat /proc/Boxtype`
       if [ "$DEEPSTANDBY" = "Vip2" ]; then
		SETS="-s"
       elif [ "$DEEPSTANDBY" = "Vip1v2" ]; then
		SETS="-s"
       elif [ "$DEEPSTANDBY" = "Vip1" ]; then
		SETS="-x"
       fi
       if [ "$fb" = "neu" ]; then
          echo "Fernbedienung NEU geladen"
            /bin/evremote2 $SETS vip2 &
       elif [ "$fb" = "alt" ]; then
          echo "Fernbedienung ALT geladen"
          /bin/evremote2 $SETS vip1 &
       elif [ "$fb" = "opti" ]; then
          echo "Fernbedienung OPTI geladen"
          /bin/evremote2 $SETS opti &
       elif [ "$fb" = "Pingulux" ]; then
          echo "Fernbedienung Pingulux geladen"
          /bin/evremote2 $SETS Pingulux &
       elif [ "$fb" = "mce2005" ]; then
          echo "Fernbedienung MediaCenter geladen"
          /bin/evremote2 $SETS MediaCenter &
       elif [ "$fb" = "techno" ]; then
          echo "Fernbedienung TechnoTrend geladen"
          /bin/evremote2 $SETS TechnoTrend &
       fi
    fi
    fi
elif [ "$1" = "Netapps" ]; then
       /etc/init.d/vsftpd start
       /usr/sbin/inetd
elif [ "$1" = "Mountswap" ]; then
    if [ -e /var/config/SWAP ]; then
    SWAPFILE=`cat /var/config/SWAP`
       if [ "$SWAPFILE" = "ramzswap" ]; then
             mknod /dev/ramzswap0 b 253 0 >/dev/null 2>&1
             swapon /dev/ramzswap0
       elif [ "$SWAPFILE" = "swapfile" ]; then
          swapon /hdd/swap0
       elif [ "$SWAPFILE" = "swapdev" ]; then
             swapon /dev/sda3
       fi
    else
       swapon /dev/sda3
    fi
elif [ "$1" = "Dhcp" ]; then
       NFS=`grep -c nfs /proc/cmdline`
       if [ "$NFS" -eq "1" ]; then
          echo "Booting from nfs, don't set network"
       else
          if [ -e /etc/network/interfaces ]; then
        ip addr flush eth0
        /etc/init.d/networking stop
        DHCP=`grep -c dhcp /etc/network/interfaces`
        if [ "$DHCP" -eq "1" ]; then
           echo "Starting dhcp"
               /etc/init.d/udhcpc start
        fi
        /etc/init.d/networking start &
          fi
       fi

       touch /dev/.udev
elif [ "$1" = "Cleanup" ]; then
    ### loescht ueberreste des Wlans
    if [ -e /var/run/wpa_supplicant ]; then
          echo "Loesche old W-Lan settings"
          rm -rf /var/run/wpa_supplicant
          echo "DONE"
    fi
    ###### Den Muel entsorgen ####
    if [ -e /.Trash-1000 ]; then
        echo "Loesche alten Muell"
        rm -rf /.Trash-1000
        echo "Fertig"
    fi
    if [ -e /.Trash-0 ]; then
        echo "Loesche neuen Muell"
        rm -rf /.Trash-0
        echo "Fertig"
    fi
elif [ "$1" = "Clockdown" ]; then
    if [ -e /var/keys/Benutzerdaten/.system/overclock ]; then
       OVERCLOCK=`cat /var/keys/Benutzerdaten/.system/overclock`
       if [ "$OVERCLOCK" = "300on" ]; then
        	echo 15110 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "333on" ]; then
        	echo 15110 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "366on" ]; then
        	echo 15110 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "400on" ]; then
        	echo 15110 > /proc/cpu_frequ/pll0_ndiv_mdiv
       elif [ "$OVERCLOCK" = "300daueron" ]; then
		echo "Dauer Overclocking -- CPU Stable freq. 300 Mhz"
       elif [ "$OVERCLOCK" = "333daueron" ]; then
		echo "Dauer Overclocking -- CPU Stable freq. 333 Mhz"
       elif [ "$OVERCLOCK" = "366daueron" ]; then
		echo "Dauer Overclocking -- CPU Stable freq. 366 Mhz"
       elif [ "$OVERCLOCK" = "400daueron" ]; then
		echo "Dauer Overclocking -- CPU Stable freq. 400 Mhz"
       else
		echo "Overclock OFF"
       fi
    else
	echo "Overclock OFF -- Default"
    fi
elif [ "$1" = "Upnp" ]; then
          ##### UPNP Verzeichniss Fix ####
       if [ ! -e /hdd/upnp ]; then
          echo "symlink zu /upnp erstellen"
          ln -s /upnp /hdd/upnp
          echo "Fertig"
       fi
elif [ "$1" = "Bootlogo" ]; then
    if [ -e /var/config/subsystem ]; then
       SYSTEM=`cat /var/config/subsystem`
       if [ "$SYSTEM" = "Neutrino" ]; then
	  echo "logo OFF"
          /usr/local/bin/dvbtest -4 -f l /boot/NeutrinoHD.mp4 &
       else
          /usr/local/bin/dvbtest -4 -f l /boot/Enigma2.mp4 &
       fi
    else
       /usr/local/bin/dvbtest -4 -f l /boot/Enigma2.mp4 &
    fi

       stfbcontrol a 0
elif [ "$1" = "Systemcheck" ]; then
    if [ -e /var/config/subsystem ]; then
       SYSTEM=`cat /var/config/subsystem`
       if [ "$SYSTEM" = "Neutrino" ]; then
          echo "Duck-Trick Image" > /dev/vfd
          echo "LOADING NHD2"
       else
          echo "Duck-Trick Image" > /dev/vfd
          echo "LOADING E2"
       fi
    else
       echo "Duck-Trick Image" > /dev/vfd
       echo "LOADING E2"
    fi
elif [ "$1" = "Loopoff" ]; then
	SYSTEM=`cat /var/config/subsystem`
      	if [ "$SYSTEM" = "Neutrino" ]; then
		sleep 20
		echo "0" > /var/config/loop
		fp_control -i 38 0 > /dev/null
		fp_control -i 39 0 > /dev/null
		fp_control -i 40 0 > /dev/null
		fp_control -i 41 0 > /dev/null
	else
		sleep 80
		echo "0" > /var/config/loop
		fp_control -i 38 0 > /dev/null
		fp_control -i 39 0 > /dev/null
		fp_control -i 40 0 > /dev/null
		fp_control -i 41 0 > /dev/null
	fi
elif [ "$1" = "Loop" ]; then
LOOP=`cat /var/config/loop`
if [ "$LOOP" = "1" ]; then
	fp_control -i 41 1 > /dev/null
	fp_control -i 38 1 > /dev/null
else
	fp_control -i 38 0 > /dev/null
	fp_control -i 39 0 > /dev/null
	fp_control -i 40 0 > /dev/null
	fp_control -i 41 0 > /dev/null
fi
while [ "$LOOP" = "1" ]
do
	fp_control -i 40 1 > /dev/null
	sleep 1
	fp_control -i 39 1 > /dev/null
	sleep 1
	fp_control -i 40 0 > /dev/null
	fp_control -i 39 0 > /dev/null
	LOOP=`cat /var/config/loop`
done
elif [ "$1" = "Firstboot" ]; then
	if [ "$2" = "step1" ]; then
    		# ADD AutoFB Switch
    		if [ -e /var/etc/firstboot ]; then
			/bin/autoswitch -r
			sleep 3
   	 		# ADD Scart/HDMI Switch
			/bin/autoswitch -v
    		fi
	fi
fi

