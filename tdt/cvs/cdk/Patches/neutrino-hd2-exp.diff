--- neutrino-hd2-exp.org/src/driver/vfd.cpp	2013-04-22 10:13:02.967204000 +0200
+++ neutrino-hd2-exp/src/driver/vfd.cpp	2013-04-23 19:48:49.066943614 +0200
@@ -43,13 +43,10 @@
 #include <system/debug.h>
 
 
-#if defined(PLATFORM_SPARK7162)
 static struct aotom_ioctl_data aotom_data;
-#endif
 
 //konfetti: let us share the device with evremote and fp_control
 //it does currently not support more than one user (see e.g. micom)
-#ifdef __sh__
 bool blocked = false;
 
 void CVFD::openDevice()
@@ -79,40 +76,16 @@
 	
 	fd = -1;
 }
-#endif
 
 // constructor
 CVFD::CVFD()
 {
 	// vfd
-#if defined (PLATFORM_XTREND) || defined (PLATFORM_GENERIC)
-	has_lcd = 0;
-#else
 	has_lcd = 1;
-#endif
 
 	// 4digits
-#if defined (PLATFORM_GIGABLUE) || defined (PLATFORM_CUBREVO_250HD) || defined (PLATFORM_SPARK)
-	is4digits = 1;
-#else
 	is4digits = 0;
-#endif
-	// has led
-#if defined (PLATFORM_GIGABLUE) || defined (PLATFORM_SPARK)
-	has_led = 1;
-#else	
-	has_led = 0;
-#endif
-
-#if defined (PLATFORM_COOLSTREAM)
-	fd = open("/dev/display", O_RDONLY);
-	
-	if(fd < 0) 
-	{
-		perror("/dev/display");
-		has_lcd = 0;
-	}
-#endif
+
 	
 	text[0] = 0;
 	clearClock = 0;
@@ -122,10 +95,7 @@
 
 CVFD::~CVFD()
 { 
-#if defined (PLATFORM_COOLSTREAM)
-	if(fd > 0)
-		close(fd);
-#endif
+
 }
 
 CVFD * CVFD::getInstance()
@@ -164,15 +134,7 @@
 
 void CVFD::wake_up() 
 {
-#if defined (PLATFORM_COOLSTREAM)  
-	if (atoi(g_settings.lcd_setting_dim_time) > 0) 
-	{
-		timeout_cnt = atoi(g_settings.lcd_setting_dim_time);
-		g_settings.lcd_setting_dim_brightness > 0 ? setBrightness(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS]) : setPower(1);
-	}
-	else
-		setPower(1);
-#endif	
+
 }
 
 void * CVFD::TimeThread(void *)
@@ -207,10 +169,6 @@
 		return ;
 	}
 	
-	// set led color
-#if defined (PLATFORM_GIGABLUE)
-	vfd_led("1");  //1:, 2:, 3:
-#endif
 }
 
 void CVFD::setlcdparameter(int dimm, const int power)
@@ -233,7 +191,6 @@
 
 	dprintf(DEBUG_DEBUG, "CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
 	
-#ifdef __sh__
         struct vfd_ioctl_data data;
 	data.start_address = dimm;
 	
@@ -247,11 +204,6 @@
 		perror("VFDBRIGHTNESS");
 	
 	closeDevice();
-#elif defined (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, IOC_VFD_SET_BRIGHT, dimm);
-	if(ret < 0)
-		perror("IOC_VFD_SET_BRIGHT");
-#endif		
 }
 
 void CVFD::setlcdparameter(void)
@@ -276,31 +228,6 @@
 	if (mode != MODE_TVRADIO)
 		return;
 
-	// scroll text
-	#if 0
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_SCROLL_TEXT] == 1)
-	{
-		int len = strlen((char *) servicename.c_str());
-
-		if(len>14)
-		{
-			ShowScrollText((char *) servicename.c_str());
-		}
-		else
-		{
-			if(vfd_scrollText != 0)
-			{
-				pthread_cancel(vfd_scrollText);
-				pthread_join(vfd_scrollText, NULL);
-		
-				vfd_scrollText = 0;
-			}
-	
-			ShowText((char *) servicename.c_str());
-		}
-	}
-	else
-	#endif
 	{
 		ShowText((char *)name.c_str() );
 	}
@@ -448,10 +375,7 @@
 			ShowIcon(VFD_ICON_MP3, true);			
 			ShowIcon(VFD_ICON_TV, false);			
 			showAudioPlayMode(AUDIO_MODE_STOP);			
-			showclock = true;
-#if !defined (PLATFORM_COOLSTREAM)			
-			ShowIcon(VFD_ICON_LOCK, false);
-#endif			
+			showclock = true;			
 			ShowIcon(VFD_ICON_HD, false);
 			ShowIcon(VFD_ICON_DOLBY, false);
 			//showTime();      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
@@ -543,7 +467,6 @@
 	if(!has_lcd || is4digits) 
 		return;
 
-#ifdef __sh__
 	struct vfd_ioctl_data data;
 	data.start_address = power;
 	
@@ -553,22 +476,12 @@
 		perror("VFDPWRLED");
 	
 	closeDevice();
-#endif
 }
 
 void CVFD::setFPTime(void)
 {
 	if(!has_lcd)
 		return;
-
-#ifdef __sh__
-	//openDevice();
-	
-	//if( ioctl(fd, VFDSETTIME) < 0)  
-	//	perror("VFDPWRLED");
-	
-	//closeDevice();
-#endif
 }
 
 int CVFD::getPower()
@@ -626,62 +539,25 @@
 	if(!has_lcd) 
 		return;
 	
-#if defined (PLATFORM_GIGABLUE)
-	ShowText("    "); // 4 empty digits
-#elif defined __sh__ 
 	struct vfd_ioctl_data data;
-#if defined (PLATFORM_KATHREIN)		/* using this otherwise VFD of ufs910 is black and Neutrino has a segfault 		*/
-	data.start_address = 0x01;
-	data.length = 0x0;
-	openDevice();	
-	if (ioctl(fd, VFDDISPLAYCLR, &data) <0)
-		perror("VFDDISPLAYCLR");
-	closeDevice();
-#else
 	data.start_address = 0;
 	openDevice();	
 	if( ioctl(fd, VFDDISPLAYWRITEONOFF, &data) < 0)
 		perror("VFDDISPLAYCLR");
 	closeDevice();
-#endif
-#elif (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, IOC_VFD_CLEAR_ALL, 0);
-	if(ret < 0)
-		perror("IOC_VFD_SET_TEXT");
-	else
-		text[0] = 0;
-#endif
 }
 
 void CVFD::ClearIcons()				/* switcht all VFD Icons off		*/
 {
 	if(!has_lcd || is4digits) 
 		return;
-	
-#if defined (PLATFORM_KATHREIN)
-	int i;
-	struct vfd_ioctl_data data;
-	
-	openDevice();
-	
-	for(i=0; i <= 15; i++)
-	{
-		data.data[0] = i;
-		data.data[4] = 0;
-		
-		if( ioctl(fd, VFDICONDISPLAYONOFF, &data) < 0)
-			perror("VFDICONDISPLAYONOFF");
-	}
-	
-	closeDevice();
-#elif defined(PLATFORM_SPARK7162)		/* using one command for switching off all Icons*/	 
+		 
 	openDevice();
 	aotom_data.u.icon.icon_nr = SPARK_ICON_ALL;
 	aotom_data.u.icon.on = 0;
 	if (ioctl(fd, VFDICONDISPLAYONOFF, &aotom_data) <0)
 		perror("VFDICONDISPLAYONOFF");
 	closeDevice();
-#endif
 }
 
 void CVFD::ShowIcon(vfd_icon icon, bool show)
@@ -691,38 +567,24 @@
 	
 	dprintf(DEBUG_DEBUG, "CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
 
-#ifdef __sh__
 	openDevice();
-#if defined(PLATFORM_SPARK7162)
 	aotom_data.u.icon.icon_nr = icon;
 	if (show == true)
 		aotom_data.u.icon.on = 1;
 	else
 		aotom_data.u.icon.on = 0;
 	if (ioctl(fd, VFDICONDISPLAYONOFF, &aotom_data) <0)
-		perror("VFDICONDISPLAYONOFF");	
-#else
-#if defined (PLATFORM_KATHREIN)
-	if (icon == 17)				/* returning because not existing icon at ufs910 */
-	{
-		closeDevice();	
-		return;
-	}
-#endif	
+		perror("VFDICONDISPLAYONOFF_YES_AOTOM");	
+	
 	struct vfd_ioctl_data data;
 
 	data.data[0] = (icon - 1) & 0x1F;
 	data.data[4] = show ? 1 : 0;
 	
-	if( ioctl(fd, VFDICONDISPLAYONOFF, &data) < 0)
-		perror("VFDICONDISPLAYONOFF");
-#endif	
+	if( ioctl(fd, VFDICONDISPLAYONOFF, &aotom_data) < 0)
+		perror("VFDICONDISPLAYONOFF_NO_AOTOM");
+
 	closeDevice();
-#elif defined (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, show ? IOC_VFD_SET_ICON : IOC_VFD_CLEAR_ICON, icon);
-	if(ret < 0)
-		perror(show ? "IOC_VFD_SET_ICON" : "IOC_VFD_CLEAR_ICON");
-#endif
 }
 
 void * CVFD::ThreadScrollText(void * arg)
@@ -822,51 +684,20 @@
 		}
 	}
 	 
-#if defined (__sh__)	 
 	openDevice();
 	
 	if( write(fd , text.c_str(), len > 16? 16 : len ) < 0)
 		perror("write to vfd failed");
 	
 	closeDevice();
-#elif defined (PLATFORM_GIGABLUE)	
-	FILE *f;
-	if((f = fopen("/proc/vfd","w")) == NULL) 
-		return;
-	
-	fprintf(f,"%s", str);
-	
-	fclose(f);
-#elif defined (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, IOC_VFD_SET_TEXT, len ? str : NULL);
-	if(ret < 0)
-		perror("IOC_VFD_SET_TEXT");
-#endif
 }
 
 void CVFD::setFan(bool enable)
 {
-#ifdef __sh__
-	//openDevice();
 	
-	//if( ioctl(fd, VFDSETFAN, enable) < 0)  
-	//	perror("VFDPWRLED");
-	
-	//closeDevice();
-#endif	
 }
 
 void CVFD::vfd_led(const char * led)
 {
-#if defined (PLATFORM_GIGABLUE)  
-	FILE * f;
-	if((f = fopen("/proc/stb/fp/led0_pattern", "w")) == NULL) 
-		return;
-	
-	fprintf(f, "%s", led);
-	fclose(f);
-#endif	
-}
-
-
 
+}
--- neutrino-hd2-exp.org/src/driver/vfd.h	2013-04-22 10:13:02.403201000 +0200
+++ neutrino-hd2-exp/src/driver/vfd.h	2013-04-23 19:56:16.865164127 +0200
@@ -33,12 +33,7 @@
 #include <pthread.h>
 #include <string>
 
-#if defined (PLATFORM_COOLSTREAM)
-#include <cs_vfd.h>
-#endif
 
-
-#if defined(PLATFORM_SPARK7162)
 /* SAB Triple VFD Icons								*/
 /* taken from aotom_main.h, with these numbers the Icons on Spark7162		*/
 /* will work right ( hopefully all Models )					*/
@@ -118,115 +113,6 @@
 	VFD_ICON_LOCK 		= CA,
 } vfd_icon;
 
-#endif //spark7162
-
-#if defined(PLATFORM_KATHREIN)
-
-typedef enum
-{
-	vfd_910_usb = 1,
-	vfd_910_hd = 2,
-	vfd_910_hdd = 3,
-	vfd_910_lock = 4,
-	vfd_910_bt = 5,
-	vfd_910_mp3 = 6,
-	vfd_910_music = 7,
-	vfd_910_dd = 8,
-	vfd_910_mail = 9,
-	vfd_910_mute = 10,
-	vfd_910_play = 11,
-	vfd_910_pause = 12,
-	vfd_910_ff = 13,
-	vfd_910_fr = 14,
-	vfd_910_rec = 15,
-	vfd_910_clock = 16,
-} ufs910_vfd_icon;
-
-
-// neutrino common translate for ufs910  / ufs913
-typedef enum
-{
-	VFD_ICON_MUTE		= vfd_910_mute,		// UFS910 hasn't all icons, therefore a value wich doesn't change anything
-	VFD_ICON_DOLBY		= vfd_910_dd,
-	VFD_ICON_POWER		= 17,
-	VFD_ICON_TIMESHIFT	= vfd_910_rec,
-	VFD_ICON_TV		= 17,
-	VFD_ICON_RADIO		= vfd_910_music,
-	VFD_ICON_HD		= vfd_910_hd,
-	VFD_ICON_1080P		= 17,
-	VFD_ICON_1080I		= 17,
-	VFD_ICON_720P		= 17,
-	VFD_ICON_480P		= 17,
-	VFD_ICON_480I		= 17,
-	VFD_ICON_USB		= vfd_910_usb,
-	VFD_ICON_MP3		= vfd_910_mp3,
-	VFD_ICON_PLAY		= vfd_910_play,
-	VFD_ICON_PAUSE		= vfd_910_pause,
-	VFD_ICON_LOCK 		= vfd_910_lock,
-} vfd_icon;
-
-#endif //ufs910, ufs913
-
-#if !defined(PLATFORM_KATHREIN) && !defined(PLATFORM_SPARK7162) && !defined (PLATFORM_COOLSTREAM)
-// duckbox
-// token from micom
-enum {
-	ICON_MIN,             // 0x00
-	ICON_STANDBY,
-	ICON_SAT,
-	ICON_REC,
-	ICON_TIMESHIFT,
-	ICON_TIMER,           // 0x05
-	ICON_HD,
-	ICON_USB,
-	ICON_SCRAMBLED,
-	ICON_DOLBY,
-	ICON_MUTE,            // 0x0a
-	ICON_TUNER1,
-	ICON_TUNER2,
-	ICON_MP3,
-	ICON_REPEAT,
-	ICON_Play,            // 0x0f
-	ICON_TER,            
-	ICON_FILE,
-	ICON_480i,
-	ICON_480p,
-	ICON_576i,            // 0x14
-	ICON_576p,
-	ICON_720p,
-	ICON_1080i,
-	ICON_1080p,
-	ICON_Play_1,          // 0x19 
-	ICON_RADIO,   
-	ICON_TV,      
-	ICON_PAUSE,   
-	ICON_MAX
-};
-
-// neutrino common
-typedef enum
-{
-	VFD_ICON_MUTE		= ICON_MUTE,
-	VFD_ICON_DOLBY		= ICON_DOLBY,
-	VFD_ICON_POWER		= ICON_STANDBY,
-	VFD_ICON_TIMESHIFT	= ICON_REC,
-	VFD_ICON_TV		= ICON_TV,
-	VFD_ICON_RADIO		= ICON_TV,
-	VFD_ICON_HD		= ICON_HD,
-	VFD_ICON_1080P		= ICON_1080p,
-	VFD_ICON_1080I		= ICON_1080i,
-	VFD_ICON_720P		= ICON_720p,
-	VFD_ICON_480P		= ICON_480p,
-	VFD_ICON_480I		= ICON_480i,
-	VFD_ICON_USB		= ICON_USB,
-	VFD_ICON_MP3		= ICON_MP3,
-	VFD_ICON_PLAY		= ICON_Play,
-	VFD_ICON_PAUSE		= ICON_PAUSE,
-	VFD_ICON_LOCK 		= ICON_SCRAMBLED,
-} vfd_icon;
-#endif  //common
-
-#ifdef __sh__
 #define VFDBRIGHTNESS         0xc0425a03
 #define VFDPWRLED             0xc0425a04 /* added by zeroone, also used in fp_control/global.h ; set PowerLed Brightness on HDBOX*/
 #define VFDDRIVERINIT         0xc0425a08
@@ -251,52 +137,6 @@
 #define VFDSETTIMEMODE        0xc0425b03
 #define VFDDISPLAYCLR	      0xc0425b00
 
-#if defined(PLATFORM_SPARK7162)
-/* structs are needed for sending icons etc. to aotom 				*/
-struct set_mode_s {
-	int compat; /* 0 = compatibility mode to vfd driver; 1 = nuvoton mode */
-};
-
-struct set_brightness_s {
-	int level;
-};
-
-struct set_icon_s {
-	int icon_nr;
-	int on;
-};
-
-struct set_led_s {
-	int led_nr;
-	int on;
-};
-
-/* time must be given as follows:
- * time[0] & time[1] = mjd ???
- * time[2] = hour
- * time[3] = min
- * time[4] = sec
- */
-struct set_standby_s {
-	char time[5];
-};
-
-struct set_time_s {
-	char time[5];
-};
-
-struct aotom_ioctl_data {
-	union
-	{
-		struct set_icon_s icon;
-		struct set_led_s led;
-		struct set_brightness_s brightness;
-		struct set_mode_s mode;
-		struct set_standby_s standby;
-		struct set_time_s time;
-	} u;
-};
-#elif defined (PLATFORM_SPARK)
 /* ugly: this is copied from frontcontroller utility, but the driver
  * does not seem to provide userspace headers... :-( */
 
@@ -357,7 +197,6 @@
 #define VFDDISPLAYCHARS 0xc0425a00
 #define VFDDISPLAYCLR   0xc0425b00
 #define VFDSETMODE      0xc0425aff
-#endif //Spark7162
 
 
 struct vfd_ioctl_data {
@@ -365,7 +204,6 @@
 	unsigned char data[64];
 	unsigned char length;
 };
-#endif
 
 
 class CVFD
@@ -472,10 +310,8 @@
 		
 		void vfd_led(const char * led);
 		
-#ifdef __sh__
 		void openDevice();
 		void closeDevice();
-#endif
 };
 
 
--- neutrino-hd2-exp.org/src/gui/Makefile.am	2013-02-01 20:28:48.465181387 +0100
+++ neutrino-hd2-exp/src/gui/Makefile.am	2013-02-01 20:51:33.353237972 +0100
@@ -1,7 +1,7 @@
 BUILT_SOURCES  = svn_version.h
 
 svn_version.h:
-	@if test -d .svn ; then \
+	@if test -d ../../.svn ; then \
 		sleep 180 && rm svn_version.h & echo "#define SVNVERSION \"$$(svnversion -n || echo svn_oops!)\" " > svn_version.h ; \
 	else \
 		rm svn_version.h; echo '#define BUILT_DATE "'`date`'"' > svn_version.h ; \

