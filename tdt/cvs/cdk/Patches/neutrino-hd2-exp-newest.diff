--- neutrino-hd2-exp/src/driver/vfd.cpp	2013-10-31 17:12:47.000000000 +0100
+++ neutrino-hd2-exp/src/driver/vfd.cpp	2013-10-31 17:43:30.000000000 +0100
@@ -43,22 +43,16 @@
 #include <unistd.h>
 #include <math.h>
 #include <system/debug.h>
 #include <system/helpers.h>
 
 
-#if defined (PLATFORM_SPARK7162)
 static struct aotom_ioctl_data aotom_data;
-#endif
 
-#if defined (PLATFORM_KATHREIN) || defined (PLATFORM_SPARK7162)
 static bool usb_icon = false;
 static bool timer_icon = false;
 static bool hdd_icon = false;
-#endif
 
 //konfetti: let us share the device with evremote and fp_control
 //it does currently not support more than one user (see e.g. micom)
-#if defined (__sh__)
 bool blocked = false;
 
 void CVFD::openDevice()
@@ -88,7 +82,6 @@
 	
 	fd = -1;
 }
-#endif
 
 // default: has_lcd:1, is4digits:0, has_led:0
 // constructor
@@ -102,46 +95,7 @@
 #endif
 
 	// 4digits
-#if defined (PLATFORM_GIGABLUE) || defined (PLATFORM_ODIN) || defined (PLATFORM_CUBREVO_250HD) || defined (PLATFORM_SPARK)
-	is4digits = 1;
-#else
 	is4digits = 0;
-#endif
-
-#if defined (PLATFORM_COOLSTREAM)
-	fd = open("/dev/display", O_RDONLY);
-	
-	if(fd < 0) 
-	{
-		perror("/dev/display");
-		has_lcd = 0;
-	}
-#endif
-
-#if defined (PLATFORM_GIGABLUE)
-	fd = open("/proc/vfd", O_RDWR);
-		
-	if(fd < 0)
-	{
-		perror("/proc/vfd");
-		has_lcd = 0;
-	}
-#elif !defined (__sh__) && !defined (PLATFORM_COOLSTREAM) && !defined (USE_OPENGL)
-	fd = open("/dev/dbox/oled0", O_RDWR);
-	
-	if(fd < 0) 
-	{
-		perror("/dev/dbox/oled0");
-		
-		fd = open("/dev/oled0", O_RDWR);
-		
-		if(fd < 0)
-		{
-			perror("/dev/oled0");
-			has_lcd = 0;
-		}
-	}
-#endif
 	
 	text[0] = 0;
 	clearClock = 0;
@@ -149,12 +103,6 @@
 
 CVFD::~CVFD()
 { 
-#if !defined (__sh__) && !defined (PLATFORM_COOLSTREAM) && !defined (USE_OPENGL)
-	if(fd > 0)
-		close(fd);
-	
-	fd = -1;
-#endif
 }
 
 CVFD * CVFD::getInstance()
@@ -193,15 +141,6 @@
 
 void CVFD::wake_up() 
 {
-#if defined (PLATFORM_COOLSTREAM)  
-	if (atoi(g_settings.lcd_setting_dim_time) > 0) 
-	{
-		timeout_cnt = atoi(g_settings.lcd_setting_dim_time);
-		g_settings.lcd_setting_dim_brightness > 0 ? setBrightness(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS]) : setPower(1);
-	}
-	else
-		setPower(1);
-#endif	
 }
 
 void * CVFD::TimeThread(void *)
@@ -237,12 +176,6 @@
 	}
 	
 	// set led color
-#if defined (PLATFORM_GIGABLUE)
-	vfd_led(LED_BLUE);  //0:off, 1:blue, 2:red, 3:purple
-#elif defined (PLATFORM_VENTON)
-	vfd_symbol_network(0);
-	vfd_symbol_circle(0);
-#endif
 }
 
 void CVFD::setlcdparameter(int dimm, const int power)
@@ -265,7 +198,6 @@
 
 	dprintf(DEBUG_DEBUG, "CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
 	
-#if defined (__sh__)
         struct vfd_ioctl_data data;
 	data.start_address = dimm;
 	
@@ -278,12 +210,7 @@
 	if( ioctl(fd, VFDBRIGHTNESS, &data) < 0)  
 		perror("VFDBRIGHTNESS");
 	
-	closeDevice();
-#elif defined (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, IOC_VFD_SET_BRIGHT, dimm);
-	if(ret < 0)
-		perror("IOC_VFD_SET_BRIGHT");	
-#endif		
+	closeDevice();		
 }
 
 void CVFD::setlcdparameter(void)
@@ -333,12 +260,7 @@
 			if(force || ((hour != t->tm_hour) || (minute != t->tm_min))) 
 			{
 				hour = t->tm_hour;
-				minute = t->tm_min;
-#if defined (PLATFORM_KATHREIN)							/* time and date at kathrein because 16 character vfd	*/
-				strftime(timestr, 20, "%H:%M - %d.%m.%y", t);
-#elif !defined(PLATFORM_SPARK7162) && !defined (PLATFORM_KATHREIN)		/* no time at spark7162 because clock integrated	*/
- 				strftime(timestr, 20, "%H:%M", t);
-#endif				
+				minute = t->tm_min;			
 				ShowText(timestr);
 			}
 		} 
@@ -443,35 +365,24 @@
 	switch (m) 
 	{
 		case MODE_TVRADIO:	
-			showServicename(servicename);
-#if !defined(PLATFORM_SPARK7162)			
-			ShowIcon(VFD_ICON_MP3, false);	        // NOTE: @dbo  //ICON_MP3 and ICON_DOLBY switched in infoviewer 
-#endif			
+			showServicename(servicename);		
 	
-#if defined (PLATFORM_KATHREIN)
-			ShowIcon(VFD_ICON_USB, usb_icon);	
-			ShowIcon(VFD_ICON_HDD, hdd_icon);	
-#elif defined(PLATFORM_SPARK7162)
 			ShowIcon(VFD_ICON_USB, usb_icon);	
 			ShowDiskLevel();
 			ShowIcon(VFD_ICON_STANDBY, false);	
-#endif		
+		
 			showclock = true;
 			//showTime();      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
 			break;
 
 		case MODE_AUDIO:
 		{
-#if defined(PLATFORM_SPARK7162)
-			ShowIcon(VFD_ICON_AC3, false);			
-#endif		  
+			ShowIcon(VFD_ICON_AC3, false);					  
 			ShowIcon(VFD_ICON_MP3, true);			
 			ShowIcon(VFD_ICON_TV, false);			
 			showAudioPlayMode(AUDIO_MODE_STOP);			
-			showclock = true;
-#if !defined (PLATFORM_COOLSTREAM)			
-			ShowIcon(VFD_ICON_LOCK, false);
-#endif			
+			showclock = true;		
+			ShowIcon(VFD_ICON_LOCK, false);		
 			ShowIcon(VFD_ICON_HD, false);
 			ShowIcon(VFD_ICON_DOLBY, false);
 			//showTime();      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
@@ -492,18 +403,14 @@
 			//Clear();
 			/* clear all symbols */
 			ClearIcons();
-#if defined(PLATFORM_SPARK7162)
-			ShowIcon(VFD_ICON_CLOCK, timer_icon);	
-#endif			
+			ShowIcon(VFD_ICON_CLOCK, timer_icon);			
 			showclock = false;
 			break;
 
 		case MODE_STANDBY:
 			ShowIcon(VFD_ICON_TV, false);
 			ClearIcons();
-#if defined(PLATFORM_SPARK7162)
-			ShowIcon(VFD_ICON_STANDBY, true);	
-#endif			
+			ShowIcon(VFD_ICON_STANDBY, true);				
 			showclock = true;
 			showTime(true);      	/* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
 						/* "showTime()" clears the whole lcd in MODE_STANDBY */
@@ -574,7 +481,6 @@
 	if(!has_lcd || is4digits) 
 		return;
 
-#if defined (__sh__)
 	struct vfd_ioctl_data data;
 	data.start_address = power;
 	
@@ -584,7 +490,6 @@
 		perror("VFDPWRLED");
 	
 	closeDevice();
-#endif
 }
 
 int CVFD::getPower()
@@ -642,68 +547,29 @@
 	if(!has_lcd || is4digits) 
 		return;
 	
-#if defined (PLATFORM_GIGABLUE) || defined (PLATFORM_ODIN)
-	ShowText("     "); // 5 empty digits
-#elif defined (__sh__)
 	struct vfd_ioctl_data data;
 	
-#if defined (PLATFORM_KATHREIN)		/* using this otherwise VFD of ufs910 is black and Neutrino has a segfault 		*/
-	data.start_address = 0x01;
-	data.length = 0x0;
-	openDevice();	
-	if (ioctl(fd, VFDDISPLAYCLR, &data) <0)
-		perror("VFDDISPLAYCLR");
-	closeDevice();
-#else
 	data.start_address = 0;
 	openDevice();	
 	if( ioctl(fd, VFDDISPLAYWRITEONOFF, &data) < 0)
 		perror("VFDDISPLAYCLR");
 	closeDevice();
-#endif
-#elif (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, IOC_VFD_CLEAR_ALL, 0);
-	if(ret < 0)
-		perror("IOC_VFD_SET_TEXT");
-	else
-		text[0] = 0;
-#else
 	ShowText("            "); // 12 empty digits
-#endif
 }
 
 void CVFD::ClearIcons()				/* switcht all VFD Icons off		*/
 {
 	if(!has_lcd || is4digits) 
 		return;
-	
-#if defined (PLATFORM_KATHREIN)
-	int i;
-	struct vfd_ioctl_data data;
-	
+	/* using one command for switching off all Icons*/	 
 	openDevice();
-	
-	for(i=0; i <= 15; i++)
-	{
-		data.data[0] = i;
-		data.data[4] = 0;
-		
-		if( ioctl(fd, VFDICONDISPLAYONOFF, &data) < 0)
-			perror("VFDICONDISPLAYONOFF");
-	}
-	
-	closeDevice();
-#elif defined(PLATFORM_SPARK7162)		/* using one command for switching off all Icons*/	 
-	openDevice();
-	aotom_data.u.icon.icon_nr = SPARK_ICON_ALL;
 	aotom_data.u.icon.on = 0;
 	if (ioctl(fd, VFDICONDISPLAYONOFF, &aotom_data) <0)
 		perror("VFDICONDISPLAYONOFF");
 	closeDevice();
-#endif
 }
 
-#if defined(PLATFORM_SPARK7162)			/* only for Spark7162 STB's which Display has a HDD Level indicator */	 
+/* only for Spark7162 STB's which Display has a HDD Level indicator */	 
 void CVFD::ShowDiskLevel()
 {
 	int hdd_icons[9] ={24, 23, 21, 20, 19, 18, 17, 16, 22};
@@ -732,21 +598,14 @@
 
 	}
 }
-#endif
 
-#if defined(PLATFORM_SPARK7162)
 void CVFD::ShowIcon(int icon, bool show)
-#else
-void CVFD::ShowIcon(vfd_icon icon, bool show)
-#endif
 {
 	if(!has_lcd || is4digits) 
 		return;
 	
 	dprintf(DEBUG_DEBUG, "CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
 
-#if defined (__sh__)
-#if defined (PLATFORM_KATHREIN) || defined(PLATFORM_SPARK7162)
 	switch (icon)
 	{
 		case VFD_ICON_USB:
@@ -755,45 +614,25 @@
 		case VFD_ICON_CLOCK:
 			timer_icon = show;
 			break;
-#if defined (PLATFORM_KATHREIN)
-		case VFD_ICON_HDD:
-			hdd_icon = show;
-			break;
-#endif
 		default:
 			break;
 	}
-#endif
 
 	openDevice();
-#if defined(PLATFORM_SPARK7162)
 	aotom_data.u.icon.icon_nr = icon;
 	aotom_data.u.icon.on = show ? 1 : 0;
 	
 	if (ioctl(fd, VFDICONDISPLAYONOFF, &aotom_data) <0)
 		perror("VFDICONDISPLAYONOFF");	
-#else
-#if defined (PLATFORM_KATHREIN)
-	if (icon == 17)				/* returning because not existing icon at ufs910 */
-	{
-		closeDevice();	
-		return;
-	}
-#endif	
+	
 	struct vfd_ioctl_data data;
 
 	data.data[0] = (icon - 1) & 0x1F;
 	data.data[4] = show ? 1 : 0;
 	
 	if( ioctl(fd, VFDICONDISPLAYONOFF, &data) < 0)
-		perror("VFDICONDISPLAYONOFF");
-#endif	
+		perror("VFDICONDISPLAYONOFF");	
 	closeDevice();
-#elif defined (PLATFORM_COOLSTREAM)
-	int ret = ioctl(fd, show ? IOC_VFD_SET_ICON : IOC_VFD_CLEAR_ICON, icon);
-	if(ret < 0)
-		perror(show ? "IOC_VFD_SET_ICON" : "IOC_VFD_CLEAR_ICON");
-#endif
 }
 
 void CVFD::ShowText(const char * str)
@@ -809,58 +648,43 @@
 	if(len == 0)
 		return;
 	
-	// replace
+	// token from seifes repo
 	std::string text = str;
-	text = replace_all(text, "\n", " ");
-	 
-#if defined (__sh__)	 
+	
+	if(!is4digits)
+	{	
+		/* this is crude, it just replaces ÄÖÜ with AOU since the display can't show them anyway */
+		/*                       Ä           ä           Ö           ö           Ü           ü   	ß  	*/
+		char tofind[][3] = { "\xc3\x84", "\xc3\xa4", "\xc3\x96", "\xc3\xb6", "\xc3\x9c", "\xc3\xbc", "\xc3\x9f" };
+		char toreplace[] = { "AaOoUus" };
+		char repl[2];
+		repl[1] = '\0';
+		int i = 0;
+		size_t pos;
+		
+		while (toreplace[i] != 0x0) 
+		{
+			pos = text.find(tofind[i]);
+			if (pos == std::string::npos) 
+			{
+				i++;
+				continue;
+			}
+			repl[0] = toreplace[i];
+			text.replace(pos, 2, std::string(repl));
+		}
+	}
+	 	 
 	openDevice();
 	
 	if(write(fd , text.c_str(), len > 16? 16 : len ) < 0)
 		perror("write to vfd failed");
 	
 	closeDevice();
-#elif defined (PLATFORM_ODIN) || defined (PLATFORM_GIGABLUE)
-	if( write(fd, text.c_str(), len > 5? 5 : len ) < 0)
-		perror("write to vfd failed");
-#else
-	if( write(fd, text.c_str(), len > 12? 12 : len ) < 0)
-		perror("write to vfd failed");
-	
-#endif
 }
 
 void CVFD::setFan(bool enable)
 {
-#if defined (__sh__)
-	//openDevice();
-	
-	//if( ioctl(fd, VFDSETFAN, enable) < 0)  
-	//	perror("VFDPWRLED");
-	
-	//closeDevice();
-#endif	
-}
-
-void CVFD::vfd_led(int led)
-{
-	const char *VFDLED[] = {
-		"VFD_OFF",
-		"VFD_BLUE",
-		"VFD_RED",
-		"VFD_PURPLE"
-	};
-	
-	dprintf(DEBUG_NORMAL, "CVFD::vfd_led: %s\n", VFDLED[led]);
-	
-#if defined (PLATFORM_GIGABLUE)  
-	FILE * f;
-	if((f = fopen("/proc/stb/fp/led0_pattern", "w")) == NULL) 
-		return;
-	
-	fprintf(f, "%d", led);
-	fclose(f);
-#endif	
 }
 
 void CVFD::vfd_symbol_network(int net)
@@ -871,17 +695,6 @@
 	};
 	
 	dprintf(DEBUG_NORMAL, "CVFD::vfd_symbol_network: %s\n", VFDNET[net]);
-	
-#if defined (PLATFORM_VENTON)	
-	FILE *f;
-	if((f = fopen("/proc/stb/lcd/symbol_network","w")) == NULL) 
-	{
-		printf("cannot open /proc/stb/lcd/symbol_network (%m)\n");
-		return;
-	}	
-	fprintf(f,"%i", net);
-	fclose(f);
-#endif	
 }
 
 void CVFD::vfd_symbol_circle(int cir)
@@ -891,19 +704,7 @@
 		"ON"
 	};
 	
-	dprintf(DEBUG_NORMAL, "CVFD::vfd_symbol_circle: %s\n", VFDCIRCLE[cir]);
-	
-#if defined (PLATFORM_VENTON)	
-	FILE *f;
-	if((f = fopen("/proc/stb/lcd/symbol_circle","w")) == NULL) 
-	{
-		printf("cannotopen /proc/stb/lcd/symbol_circle (%m)\n");
-	
-		return;
-	}
-	fprintf(f,"%i", cir);
-	fclose(f);
-#endif	
+	dprintf(DEBUG_NORMAL, "CVFD::vfd_symbol_circle: %s\n", VFDCIRCLE[cir]);	
 }
 
 void CVFD::setFPTime(void)
@@ -911,7 +712,6 @@
 	if(!has_lcd)
 		return;
 
-#if defined (__sh__)
 	openDevice();
 	
 	char timebuf[6];
@@ -933,7 +733,6 @@
 		perror("VFDPWRLED");
 	
 	closeDevice();
-#endif
 }
 
 void CVFD::LCDshowText(int pos)

--- neutrino-hd2-exp/src/driver/vfd.h	2013-10-31 17:12:47.000000000 +0100
+++ neutrino-hd2-exp/src/driver/vfd.h	2013-10-31 17:13:13.000000000 +0100
@@ -33,12 +33,7 @@
 #include <pthread.h>
 #include <string>
 
-#if defined (PLATFORM_COOLSTREAM)
-#include <cs_vfd.h>
-#endif
-
 
-#if defined(PLATFORM_SPARK7162)
 /* SAB Triple VFD Icons								*/
 /* taken from aotom_main.h, with these numbers the Icons on Spark7162		*/
 /* will work right ( hopefully all Models )					*/
@@ -131,114 +126,6 @@ typedef enum
 	VFD_ICON_STANDBY	= VFD_SPARK_CYCLE	
 } vfd_icon;
 
-#endif //spark7162
-
-#if defined(PLATFORM_KATHREIN)
-typedef enum
-{
-	vfd_910_usb = 1,
-	vfd_910_hd = 2,
-	vfd_910_hdd = 3,
-	vfd_910_lock = 4,
-	vfd_910_bt = 5,
-	vfd_910_mp3 = 6,
-	vfd_910_music = 7,
-	vfd_910_dd = 8,
-	vfd_910_mail = 9,
-	vfd_910_mute = 10,
-	vfd_910_play = 11,
-	vfd_910_pause = 12,
-	vfd_910_ff = 13,
-	vfd_910_fr = 14,
-	vfd_910_rec = 15,
-	vfd_910_clock = 16
-} ufs910_vfd_icon;
-
-// neutrino common translate for ufs910  / ufs913
-typedef enum
-{
-	VFD_ICON_MUTE		= vfd_910_mute,		// UFS910 hasn't all icons, therefore a value wich doesn't change anything
-	VFD_ICON_DOLBY		= vfd_910_dd,
-	VFD_ICON_POWER		= 17,
-	VFD_ICON_TIMESHIFT	= vfd_910_rec,
-	VFD_ICON_TV		= 17,
-	VFD_ICON_RADIO		= vfd_910_music,
-	VFD_ICON_HD		= vfd_910_hd,
-	VFD_ICON_1080P		= 17,
-	VFD_ICON_1080I		= 17,
-	VFD_ICON_720P		= 17,
-	VFD_ICON_480P		= 17,
-	VFD_ICON_480I		= 17,
-	VFD_ICON_USB		= vfd_910_usb,
-	VFD_ICON_MP3		= vfd_910_mp3,
-	VFD_ICON_PLAY		= vfd_910_play,
-	VFD_ICON_PAUSE		= vfd_910_pause,
-	VFD_ICON_LOCK 		= vfd_910_lock,
-	VFD_ICON_HDD 		= vfd_910_hdd,	
-	VFD_ICON_CLOCK		= vfd_910_clock
-} vfd_icon;
-#endif //ufs910, ufs913
-
-#if !defined(PLATFORM_KATHREIN) && !defined(PLATFORM_SPARK7162) && !defined (PLATFORM_COOLSTREAM)
-// duckbox
-// token from micom
-enum {
-	ICON_MIN,             // 0x00
-	ICON_STANDBY,
-	ICON_SAT,
-	ICON_REC,
-	ICON_TIMESHIFT,
-	ICON_TIMER,           // 0x05
-	ICON_HD,
-	ICON_USB,
-	ICON_SCRAMBLED,
-	ICON_DOLBY,
-	ICON_MUTE,            // 0x0a
-	ICON_TUNER1,
-	ICON_TUNER2,
-	ICON_MP3,
-	ICON_REPEAT,
-	ICON_Play,            // 0x0f
-	ICON_TER,            
-	ICON_FILE,
-	ICON_480i,
-	ICON_480p,
-	ICON_576i,            // 0x14
-	ICON_576p,
-	ICON_720p,
-	ICON_1080i,
-	ICON_1080p,
-	ICON_Play_1,          // 0x19 
-	ICON_RADIO,   
-	ICON_TV,      
-	ICON_PAUSE,   
-	ICON_MAX
-};
-
-// neutrino common
-typedef enum
-{
-	VFD_ICON_MUTE		= ICON_MUTE,
-	VFD_ICON_DOLBY		= ICON_DOLBY,
-	VFD_ICON_POWER		= ICON_STANDBY,
-	VFD_ICON_TIMESHIFT	= ICON_REC,
-	VFD_ICON_TV		= ICON_TV,
-	VFD_ICON_RADIO		= ICON_TV,
-	VFD_ICON_HD		= ICON_HD,
-	VFD_ICON_1080P		= ICON_1080p,
-	VFD_ICON_1080I		= ICON_1080i,
-	VFD_ICON_720P		= ICON_720p,
-	VFD_ICON_480P		= ICON_480p,
-	VFD_ICON_480I		= ICON_480i,
-	VFD_ICON_USB		= ICON_USB,
-	VFD_ICON_MP3		= ICON_MP3,
-	VFD_ICON_PLAY		= ICON_Play,
-	VFD_ICON_PAUSE		= ICON_PAUSE,
-	VFD_ICON_LOCK 		= ICON_SCRAMBLED
-} vfd_icon;
-#endif  //common
-
-#if defined (__sh__)
 #define VFDBRIGHTNESS         0xc0425a03
 #define VFDPWRLED             0xc0425a04 /* added by zeroone, also used in fp_control/global.h ; set PowerLed Brightness on HDBOX*/
 #define VFDDRIVERINIT         0xc0425a08
@@ -263,60 +150,8 @@ typedef enum
 #define VFDSETTIMEMODE        0xc0425b03
 #define VFDDISPLAYCLR	      0xc0425b00
 
-#if defined(PLATFORM_SPARK7162)
-/* structs are needed for sending icons etc. to aotom 				*/
-struct set_mode_s {
-	int compat; /* 0 = compatibility mode to vfd driver; 1 = nuvoton mode */
-};
-
-struct set_brightness_s {
-	int level;
-};
-
-struct set_icon_s {
-	int icon_nr;
-	int on;
-};
-
-struct set_led_s {
-	int led_nr;
-	int on;
-};
-
-/* time must be given as follows:
- * time[0] & time[1] = mjd ???
- * time[2] = hour
- * time[3] = min
- * time[4] = sec
- */
-struct set_standby_s {
-	char time[5];
-};
-
-struct set_time_s {
-	char time[5];
-};
 
-struct aotom_ioctl_data {
-	union
-	{
-		struct set_icon_s icon;
-		struct set_led_s led;
-		struct set_brightness_s brightness;
-		struct set_mode_s mode;
-		struct set_standby_s standby;
-		struct set_time_s time;
-	} u;
-};
-#elif defined (PLATFORM_SPARK)
-/* ugly: this is copied from frontcontroller utility, but the driver
- * does not seem to provide userspace headers... :-( */
-
-
-/* this setups the mode temporarily (for one ioctl)
- * to the desired mode. currently the "normal" mode
- * is the compatible vfd mode
- */
+/* structs are needed for sending icons etc. to aotom 				*/
 struct set_mode_s {
 	int compat; /* 0 = compatibility mode to vfd driver; 1 = nuvoton mode */
 };
@@ -361,23 +196,12 @@ struct aotom_ioctl_data {
 	} u;
 };
 
-/* a strange way of defining ioctls... but anyway... */
-#define VFDGETTIME      0xc0425afa
-#define VFDSETTIME      0xc0425afb
-#define VFDSTANDBY      0xc0425afc
-#define VFDSETLED       0xc0425afe
-#define VFDDISPLAYCHARS 0xc0425a00
-#define VFDDISPLAYCLR   0xc0425b00
-#define VFDSETMODE      0xc0425aff
-#endif //Spark7162
-
 
 struct vfd_ioctl_data {
 	unsigned char start_address;
 	unsigned char data[64];
 	unsigned char length;
 };
-#endif
 
 
 class CVFD
@@ -477,12 +301,9 @@ class CVFD
 		void Unlock();
 		void Clear();
 		void ClearIcons();
-#if defined(PLATFORM_SPARK7162)
 		void ShowDiskLevel();
 		void ShowIcon(int icon, bool show);
-#else
-		void ShowIcon(vfd_icon icon, bool show);
-#endif		
+//		void ShowIcon(vfd_icon icon, bool show);	
 		void ShowText(const char * str);
 		void LCDshowText(int pos);
 		
@@ -496,10 +317,8 @@ class CVFD
 		void vfd_symbol_network(int net);
 		void vfd_symbol_circle(int cir);
 		
-#if defined (__sh__)
 		void openDevice();
 		void closeDevice();
-#endif
 };
 
 #endif
--- neutrino-hd2-exp.org/src/gui/Makefile.am	2013-02-01 20:28:48.465181387 +0100
+++ neutrino-hd2-exp/src/gui/Makefile.am	2013-02-01 20:51:33.353237972 +0100
@@ -3,7 +3,7 @@
 BUILT_SOURCES  = svn_version.h
 
 svn_version.h:
-	@if test -d .svn ; then \
+	@if test -d ../../.svn ; then \
 		sleep 180 && rm svn_version.h & echo "#define SVNVERSION \"$$(svnversion -n || echo svn_oops!)\" " > svn_version.h ; \
 	else \
 		rm svn_version.h; echo '#define BUILT_DATE "'`date`'"' > svn_version.h ; \

