--- linux-sh4-2.6.32.28_stm24_0211_orig/arch/sh/boards/mach-mb442/setup.c	2013-05-28 10:16:51.123223278 +0200
+++ linux-sh4/arch/sh/boards/mach-mb442/setup.c	2013-05-24 12:25:40.216912000 +0200
@@ -22,14 +22,30 @@
 #include <linux/stm/platform.h>
 #include <linux/stm/stx7100.h>
 #include <asm/irl.h>
+#include <linux/bpa2.h>
 
-
-
-#define MB442_PIO_STE100P_RESET stm_gpio(2, 4)
-#define MB442_PIO_SMC91X_RESET stm_gpio(2, 6)
+#define MB442_PIO_STE100P_RESET stm_gpio(3, 6)
 #define MB442_PIO_FLASH_VPP stm_gpio(2, 7)
 
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", "v4l2-coded-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", NULL };
 
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+      {
+	      .name  = "LMI_VID",
+	      .start = 0x10800000, 
+	      .size  = 0x03800000, //57344 KB by 0x03800000, 106496 KB by 0x06800000
+	      .flags = 0,
+	      .aka   = LMI_VID_partalias
+      },
+      {
+	      .name  = "LMI_SYS",
+	      .start = 0,
+	      .size  = 0x01700000, //Wir brauchen mehr Speicher fuer Dual Record
+	      .flags = 0,
+	      .aka   = LMI_SYS_partalias
+      }
+};
 
 void __init mb442_setup(char** cmdline_p)
 {
@@ -43,6 +59,8 @@
 	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
 			.hw_flow_control = 0,
 			.is_console = 0, });
+
+  	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
 }
 
 static struct resource mb442_smc91x_resources[] = {
@@ -70,6 +88,36 @@
 	gpio_set_value(MB442_PIO_FLASH_VPP, enable);
 }
 
+static struct mtd_partition mtd_parts_table[] =
+{
+	{
+		.name = "Boot Firmware",
+		.size =   0x00040000,	//u-boot 0x00000000-0xa003ffff  256k
+		.offset = 0x00000000,
+		mask_flags: 0
+	},
+	{
+		.name = "Boot Config",
+		.size =   0x00020000,	//boot config 0xa0040000-0xa005ffff  128k
+		.offset = 0x00040000,
+ 	},
+	{
+		.name = "Kernel",
+		.size =   0x00280000,	//kernel 0x40000-0x2dffff 2.5MB
+		.offset = 0x00060000,
+	},
+	{
+		.name = "ROOTFS (Backup)",
+		.size =   0x002E0000,
+		.offset = 0x00240000,
+	},
+ 	{
+		.name = "Full without bootloader",
+		.size =   0x00580000,
+		.offset = 0x00040000,
+	},
+};
+
 static struct platform_device mb442_physmap_flash = {
 	.name		= "physmap-flash",
 	.id		= -1,
@@ -80,6 +128,8 @@
 	.dev.platform_data = &(struct physmap_flash_data) {
 		.width		= 2,
 		.set_vpp	= mb442_set_vpp,
+    	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+    	.parts		= mtd_parts_table
 	},
 };
 
@@ -95,7 +145,7 @@
 	return 1;
 }
 
-#define STMMAC_PHY_ADDR 14
+#define STMMAC_PHY_ADDR 2
 static int stmmac_phy_irqs[PHY_MAX_ADDR] = {
 	[STMMAC_PHY_ADDR] = IRL3_IRQ,
 };
@@ -119,9 +169,9 @@
 			.out0_enabled = 0,
 			.out1_enabled = 1, });
 
-	stx7100_configure_ssc_i2c(0, NULL);
-	stx7100_configure_ssc_spi(1, NULL);
-	stx7100_configure_ssc_i2c(2, NULL);
+	stx7100_configure_ssc_i2c(0);
+	stx7100_configure_ssc_i2c(1);
+	stx7100_configure_ssc_i2c(2);
 
 	stx7100_configure_usb();
 
@@ -130,11 +180,6 @@
 			.tx_enabled = 0,
 			.tx_od_enabled = 0, });
 
-	stx7100_configure_pata(&(struct stx7100_pata_config) {
-			.emi_bank = 3,
-			.pc_mode = 1,
-			.irq = IRL1_IRQ, });
-
 	gpio_request(MB442_PIO_FLASH_VPP, "Flash VPP");
 	gpio_direction_output(MB442_PIO_FLASH_VPP, 0);
 
@@ -149,14 +194,6 @@
 			.mdio_bus_data = &stmmac_mdio_bus,
 		});
 
-	/* Reset the SMSC 91C111 Ethernet chip */
-	gpio_request(MB442_PIO_SMC91X_RESET, "SMC91x reset");
-	gpio_direction_output(MB442_PIO_SMC91X_RESET, 0);
-	udelay(1);
-	gpio_set_value(MB442_PIO_SMC91X_RESET, 1);
-	udelay(1);
-	gpio_set_value(MB442_PIO_SMC91X_RESET, 0);
-
 	return platform_add_devices(mb442_devices,
 			ARRAY_SIZE(mb442_devices));
 }
